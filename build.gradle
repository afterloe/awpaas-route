buildscript {
	ext {
		kotlinVersion = '1.2.20'
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = "cn.awpaas"
def artifactId = "awpaas-route"
version = '1.0.0'
sourceCompatibility = 1.8

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


ext {
	springCloudVersion = 'Finchley.BUILD-SNAPSHOT'
}

// 去除 tomcat 依赖
configurations {
	compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
	compile group: "org.springframework.cloud", name: "spring-cloud-starter-zipkin"
	compile group: "org.springframework.cloud", name: "spring-cloud-starter-gateway"
	compile group: "org.springframework.boot", name: "spring-boot-starter-webflux"
	compile group: "org.springframework.boot", name: "spring-boot-starter-actuator" // spring boot actuator
	compile group: "org.springframework.cloud", name: "spring-cloud-starter-netflix-eureka-client"
	compile group: "org.springframework.boot", name: "spring-boot-starter-undertow" // undertow web container
	compile group: "com.fasterxml.jackson.module", name: "jackson-module-kotlin"
	compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8"
	compile group: "org.jetbrains.kotlin", name: "kotlin-reflect"
	testCompile group: "org.springframework.boot", name: "spring-boot-starter-test"
	testCompile group: "io.projectreactor", name: "reactor-test"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
